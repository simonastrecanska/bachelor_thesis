# SWIFT Testing Framework Configuration
# ====================================

# Database Settings
# ----------------
# Choose ONE of the following database configurations:

# Option 1: Docker PostgreSQL (Recommended for local development)
# To use this:
# 1. Run: docker-compose -f docker/docker-compose.yml up -d
# 2. Use the connection string below
database:
  # Docker PostgreSQL connection (default)
  connection_string: "postgresql://postgres:YOUR_PASSWORD@localhost:5433/swift_testing"
  
  # Optional: Override individual connection parameters
  # IMPORTANT: These must match what's in docker/docker-compose.yml
  host: "localhost"  # Use "localhost", not "host.docker.internal"
  port: 5433  # Must match the port in docker-compose.yml (5433:5432)
  username: "postgres"  # Must match POSTGRES_USER in docker-compose.yml
  password: "YOUR_PASSWORD"  # Must match POSTGRES_PASSWORD in docker-compose.yml
  dbname: "swift_testing"  # Must match POSTGRES_DB in docker-compose.yml
  
  # Database behavior settings
  add_sample_data: true  # Whether to add sample data when setting up database
  connection_timeout: 60
  pool_size: 5

# Path Settings
# ------------
paths:
  input_dir: "input"
  output_dir: "output"
  log_dir: "logs"
  model_dir: "models"
  template_dir: "templates"

# Message Generation Settings
# -------------------------
message_generation:
  seed: 42
  max_variations_per_template: 10
  field_substitution_rate: 0.3
  perturbation_degree: 0.2
  field_patterns: {}
  substitutions: {}
  # Number of messages to generate by default
  num_messages: 100
  
  # Strategy for introducing variations in templates
  # Options: "random", "targeted", "conservative"
  variation_strategy: "random"
  
  # Configuration for the template variator
  variator_config:
    perturbation_factor: 0.5  # How much to vary from the template (0.0-1.0)
    field_variation_probability: 0.7  # Probability of varying each field (0.0-1.0)

# Model Settings
# -------------
model:
  # Path to the model file relative to the project root
  path: "models/model_v1.0.0.pkl"
  
  # Model version and type
  version: "1.0.0"
  type: "blackbox"  # Options: "blackbox", "custom"
  prediction_threshold: 0.5
  model_type: "random_forest"
  model_params:
    n_estimators: 100
    max_depth: 10
    random_state: 42
  feature_extraction:
    vectorizer: "tfidf"
    max_features: 1000
    ngram_range: [1, 3]
  hyperparameter_tuning: {}
  
  # Custom model settings (if type is "custom")
  custom_model:
    enabled: false
    file_path: "models/custom_model.py"  # Path to custom model file
    class_name: "ExampleModel"  # Class name in the custom model file
    parameters: {}  # Custom model parameters

# Evaluation Settings
# -----------------
evaluation:
  metrics: ["accuracy", "precision", "recall", "f1"]
  confusion_matrix: true
  cross_validation:
    enabled: true
    n_splits: 5
  output_format: ["csv", "json", "plot"]
  plot:
    dpi: 300
    width: 10
    height: 8
    save_format: "png"

# Test Settings
# ------------
test:
  # Number of test messages to generate
  num_messages: 100
  
  # Test categories to include
  categories:
    - "MT103"
    - "MT202"
    - "MT300"
  
  # Output settings
  output_dir: "test_output"
  save_messages: true
  log_level: "INFO"  # Options: DEBUG, INFO, WARNING, ERROR 